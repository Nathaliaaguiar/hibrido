{"version":3,"sources":["./src/app/pages/contacts/contacts.module.ts","./src/app/pages/contacts/contacts.page.scss","./src/app/pages/contacts/contacts.page.ts","./src/app/pages/contacts/contacts-routing.module.ts","./src/app/pages/contacts/contacts.page.html"],"names":[],"mappings":"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","file":"pages-contacts-contacts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\r\nimport { ContactsPage } from './contacts.page';\r\n\r\n// 1) Importa módulo de formulários reativos do Angular\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,  \r\n    FormsModule,\r\n    IonicModule,\r\n    ContactsPageRoutingModule,\r\n\r\n    // 2) Importa módulo\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ContactsPage]\r\n})\r\nexport class ContactsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// 1) Importa dependências\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n// Alert Controller\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n// 6) Não permite somente espaços nos campos\r\nexport function removeSpaces(control: AbstractControl) {\r\n  if (control && control.value && !control.value.replace(/\\s/g, '').length) {\r\n    control.setValue('');\r\n  }\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.page.html',\r\n  styleUrls: ['./contacts.page.scss'],\r\n})\r\nexport class ContactsPage implements OnInit {\r\n  // 3) Atributos\r\n  public contactForm: FormGroup; // Contém o formulário de contatos\r\n  public pipe = new DatePipe('en_US'); // Formatar as datas\r\n\r\n  constructor(\r\n    // 2) Injeta dependências\r\n    public form: FormBuilder,\r\n    public firestore: AngularFirestore,\r\n\r\n    // Alert Controller\r\n    public alert: AlertController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // 4) Cria o formulário de contatos\r\n    this.contactFormCreate();\r\n  }\r\n\r\n  // 5) Cria o formulário de contatos\r\n  contactFormCreate() {\r\n\r\n    // 'contactForm' contém o formulário\r\n    // Um formulário é um 'agrupamento' (group) de campos...\r\n    this.contactForm = this.form.group({\r\n\r\n      // Data de envio está vazia\r\n      date: [''],\r\n\r\n      // Campo 'Nome' (name)\r\n      name: [\r\n        '', // Valor inicial\r\n        Validators.compose([ // Validação do campo\r\n          Validators.required, // Obrigatório\r\n          Validators.minLength(3), // Pelo menos 3 caracteres\r\n          removeSpaces // Não permite somente espaços\r\n        ]),\r\n      ],\r\n\r\n      // Campo 'E-mail' (email)\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email, // Valida somente se for um e-mail válido\r\n          removeSpaces\r\n        ]),\r\n      ],\r\n\r\n      // Campo 'Assunto' (subject)\r\n      subject: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          removeSpaces\r\n        ]),\r\n      ],\r\n      message: [\r\n        // Mensagem\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          removeSpaces\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // 7) Processa o envio do formulário]\r\n  contactSend() {\r\n\r\n    // Cria e formata a data\r\n    this.contactForm.controls.date.setValue(\r\n      this.pipe.transform(Date.now(), 'yyyy-MM-dd HH:mm:ss').trim()\r\n    );\r\n\r\n    // Salva em um novo documento do Firebase Firestore\r\n    this.firestore.collection('contacts').add(this.contactForm.value)\r\n      .then(\r\n        () => {\r\n\r\n          // Feedback\r\n          this.presentAlert();\r\n        }\r\n      )\r\n      .catch(\r\n\r\n        // Exibe erro se não salvar\r\n        (error) => {\r\n          alert('Erro ao salvar contato.' + error);\r\n        }\r\n      );\r\n  }\r\n\r\n  // Feedback\r\n  // Exibe feedback\r\n  async presentAlert() {\r\n    const alert = await this.alert.create({\r\n      header: 'Oba!',\r\n      message: 'Contato enviado com sucesso!',\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => {\r\n          \r\n          // Reset do formulário\r\n          this.contactForm.reset();\r\n        }\r\n      }]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactsPageRoutingModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n      \\r\\n    </ion-buttons>\\r\\n    <ion-title>Faça Contato</ion-title>\\r\\n    <ion-img src=\\\"assets/logo01.png\\\" slot=\\\"end\\\" class=\\\"logo-geral\\\"></ion-img>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-no-padding ion-padding-horizontal\\\">\\r\\n\\r\\n  <h2>Faça Contato</h2>\\r\\n  <p>Use o formulário abaixo para entrar em contato com a equipe do \\\"Fuinhas\\\".</p>\\r\\n  <p class=\\\"ion-text-center\\\">\\r\\n    <ion-text color=\\\"danger\\\"><small>Todos os campos obrigatórios.</small></ion-text>\\r\\n  </p>\\r\\n\\r\\n  <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"contactSend()\\\">\\r\\n\\r\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Nome:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.name.errors\\\">\\r\\n            <small *ngIf=\\\"contactForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"contactForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          E-mail:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.email.errors\\\">\\r\\n            <small *ngIf=\\\"contactForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"contactForm.controls.email.errors.email\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Assunto:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.subject.errors\\\">\\r\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n          Mensagem:\\r\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.message.errors\\\">\\r\\n            <small *ngIf=\\\"contactForm.controls.message.errors.required\\\">* Obrigatório</small>\\r\\n            <small *ngIf=\\\"contactForm.controls.message.errors.minlength\\\">* Inválido</small>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-textarea type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\" autoGrow=\\\"true\\\"></ion-textarea>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button class=\\\"ion-margin-vertical\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"contactForm.invalid\\\">Enviar</ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}